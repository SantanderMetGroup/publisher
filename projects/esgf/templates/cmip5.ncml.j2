<?xml version="1.0" encoding="UTF-8"?>
<netcdf xmlns="http://www.unidata.ucar.edu/namespaces/netcdf/ncml-2.2">
  <attribute name="primary_variables" value="{{ ','.join(df[('GLOBALS', 'variable_id')].unique()) }}"/>
  <attribute name="size" type="int" value="{{ df[('GLOBALS', 'size')].sum() }}" />
  <attribute name="size_human" value="{{ df[('GLOBALS', 'size')].sum()|filesizeformat }}" />

  <remove name="tracking_id" type="attribute" />
  <remove name="variable_id" type="attribute" />
  <remove name="version" type="attribute" />

  {% if time_values|length == 0 %}
  <variable name="time" orgName="time">
    <attribute name="units" value="{{ df[df[('GLOBALS', 'frequency')] != 'fx'].iloc[0][('time', 'units')] }}" />
    <values start="{{ df[df[('GLOBALS', 'frequency')] != 'fx'].iloc[0][('time', 'value0')] }}" increment="{{ df[df[('GLOBALS', 'frequency')] != 'fx'].iloc[0][('time', 'increment')] }}" />
  </variable>
  {% else %}
  <variable name="time" orgName="time">
    <attribute name="units" value="{{ df[df[('GLOBALS', 'frequency')] != 'fx'].iloc[0][('time', 'units')] }}" />
    <values>{{ time_values | join(" ") }}</values>
  </variable>
  {% endif %}

  {% for name,group in df.groupby(('GLOBALS', 'variable_id')) %}
  <variable name="{{ group[('GLOBALS', 'variable_id')].iloc[0] }}" orgName="{{ group[('GLOBALS', 'variable_id')].iloc[0] }}">
    <attribute name="version" type="string" value="{{ group[('GLOBALS', 'version')].iloc[0]}}" />
    <attribute name="tracking_ids" type="string" value="{{ ','.join(group[('GLOBALS', 'tracking_id')]) }}" />
  </variable>
  {% endfor %}

  <aggregation type="union">
    {% for name,group in df[df[('GLOBALS', 'frequency')] != 'fx'].sort_values(by=[('GLOBALS', 'variable_id'), ('GLOBALS', 'localpath')]).groupby(('GLOBALS', 'variable_id')) %}
    <netcdf>
      <aggregation type="joinExisting" dimName="time">
        {% for index, row in group[['GLOBALS', 'time']].iterrows() %}
        <netcdf location="{{ row[('GLOBALS', 'localpath')] }}" ncoords="{{ row[('time', 'ncoords')]|int }}" />
        {% endfor %}
      </aggregation>
    </netcdf>
    {% endfor %}

    {% for index, row in df[df[('GLOBALS', 'frequency')] == 'fx']['GLOBALS'].iterrows() %}
    <netcdf location="{{ row['localpath'] }}" />
    {% endfor %}
  </aggregation>
</netcdf>
